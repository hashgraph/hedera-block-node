# SPDX-License-Identifier: Apache-2.0
name: "Smoke Test"
on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - "*"

defaults:
  run:
    shell: bash

env:
  GRADLE_EXEC: ./gradlew

permissions:
  contents: read

jobs:
  smoke-test:
    name: "Smoke Tests"
    runs-on: block-node-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Expand Shallow Clone for Spotless
        run: |
          if [ -f .git/shallow ]; then
            git fetch --unshallow --no-recurse-submodules
          else
            echo "Repository is not shallow, no need to unshallow."
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          distribution: "temurin"
          java-version: "21.0.4"

      - name: Install grpcurl
        run: |
          curl -L https://github.com/fullstorydev/grpcurl/releases/download/v1.8.7/grpcurl_1.8.7_linux_x86_64.tar.gz -o grpcurl.tar.gz
          sudo tar -xzf grpcurl.tar.gz -C /usr/local/bin grpcurl
          rm grpcurl.tar.gz

      - name: Cache Gradle packages
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Start the Smoke Test Container
        run: ${{ env.GRADLE_EXEC }} startDockerContainerSmokeTest

      - name: Run Smoke Tests
        working-directory: server/src/test/resources/
        run: ./smoke-test.sh

      - name: Stop Smoke Test Container
        if: always()
        run: ${{ env.GRADLE_EXEC }} stopDockerContainer

      - name: Print Server Container Logs
        if: always()
        run: docker logs block-node-server
