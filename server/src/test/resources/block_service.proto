syntax = "proto3";

package com.hedera.hapi.block;

option java_package = "com.hedera.hapi.block.protoc";
option java_multiple_files = true;

//import "basic_types.proto";
//import "stream/block.proto";
//import "stream/block_item.proto";

//message PublishStreamRequest {
//    com.hedera.hapi.block.stream.BlockItem block_item = 1;
//}
//
//message PublishStreamResponse {
//    oneof response {
//        Acknowledgement acknowledgement = 1;
//        EndOfStream status = 2;
//    }
//
//    message Acknowledgement {
//        oneof acknowledgements {
//            BlockAcknowledgement block_ack = 1;
//            ItemAcknowledgement item_ack = 2;
//        }
//    }
//
//    message ItemAcknowledgement {
//        bytes item_hash = 1;
//    }
//
//    message BlockAcknowledgement {
//        uint64 block_number = 1;
//        bytes block_root_hash = 2;
//        bool block_already_exists = 3;
//    }
//
//    message EndOfStream {
//        PublishStreamResponseCode status = 1;
//        uint64 block_number = 2;
//    }
//}
//
//enum PublishStreamResponseCode {
//    STREAM_ITEMS_UNKNOWN = 0;
//    STREAM_ITEMS_SUCCESS = 1;
//    STREAM_ITEMS_TIMEOUT = 2;
//    STREAM_ITEMS_OUT_OF_ORDER = 3;
//    STREAM_ITEMS_BAD_STATE_PROOF = 4;
//    STREAM_ITEMS_BEHIND = 5;
//}
//
message SingleBlockRequest {
    uint64 block_number = 1;
    bool allow_unverified = 2;
    bool retrieve_latest = 3;
}

message SingleBlockResponse {
    SingleBlockResponseCode status = 1;
    com.hedera.hapi.block.stream.Block block = 2;
}
enum SingleBlockResponseCode {
    READ_BLOCK_UNKNOWN = 0;
    READ_BLOCK_INSUFFICIENT_BALANCE = 1;
    READ_BLOCK_SUCCESS = 2;
    READ_BLOCK_NOT_FOUND = 3;
    READ_BLOCK_NOT_AVAILABLE = 4;
    ALLOW_UNVERIFIED_REQUIRED = 5;
    VERIFIED_BLOCK_UNAVAILABLE = 6;
}

message SubscribeStreamRequest {
    uint64 start_block_number = 1;
    uint64 end_block_number = 2;
    bool allow_unverified = 3;
}
//
//message SubscribeStreamResponse {
//    oneof response {
//        SubscribeStreamResponseCode status = 1;
//        com.hedera.hapi.block.stream.BlockItem block_item = 2;
//    }
//}
//
//enum SubscribeStreamResponseCode {
//    READ_STREAM_UNKNOWN = 0;
//    READ_STREAM_INSUFFICIENT_BALANCE = 1;
//    READ_STREAM_SUCCESS = 2;
//    READ_STREAM_INVALID_START_BLOCK_NUMBER = 3;
//    READ_STREAM_INVALID_END_BLOCK_NUMBER = 4;
//}
//
//message StateSnapshotRequest {
//    uint64 last_block_number = 2;
//    bool retrieve_latest = 3;
//}
//
//message StateSnapshotResponse {
//    StateSnapshotResponseCode status = 1;
//    uint64 last_block_number = 2;
//    string snapshot_reference = 3;
//}
//
//enum StateSnapshotResponseCode {
//    STATE_SNAPSHOT_UNKNOWN = 0;
//    STATE_SNAPSHOT_INSUFFICIENT_BALANCE = 1;
//    STATE_SNAPSHOT_SUCCESS = 2;
//}
//
//message ServerStatusRequest {}
//message ServerStatusResponse {
//    uint64 first_available_block = 1;
//    uint64 last_available_block = 2;
//    bool only_latest_state = 3;
//    BlockNodeVersions version_information = 4;
//}
//
//message BlockNodeVersions {
//    proto.SemanticVersion address_book_version = 1;
//    proto.SemanticVersion stream_proto_version = 2;
//    proto.SemanticVersion software_version = 3;
//}

service BlockStreamService {
//    rpc serverStatus(ServerStatusRequest) returns (ServerStatusResponse);
    rpc singleBlock(SingleBlockRequest) returns (SingleBlockResponse);
//    rpc stateSnapshot(StateSnapshotRequest) returns (StateSnapshotResponse);
//    rpc publishBlockStream (stream PublishStreamRequest) returns (stream PublishStreamResponse);
//    rpc subscribeBlockStream(SubscribeStreamRequest) returns (stream SubscribeStreamResponse);
}
